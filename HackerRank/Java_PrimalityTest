LINK :: https://www.hackerrank.com/challenges/java-primality-test/problem?isFullScreen=true

A prime number is a natural number greater than 1 whose only positive divisors are  and itself. For example, the first six prime numbers are 2, 3, 5, 7, 11, and 13.

Given a large integer, [n], use the Java BigInteger class' isProbablePrime method to determine and print whether it's prime or not prime.

Input Format

A single line containing an integer,  (the number to be checked).

Constraints

[n] contains at most 100 digits.
Output Format

If [n] is a prime number, print prime; otherwise, print not prime.

<----- Sample Input -------------
13
-------------------------------->
<----- Sample Output ------------
prime
-------------------------------->
Explanation

The only positive divisors of  are  and , so we print prime.

<----- Solve ------------------------------------------------------------------
import java.io.*;
import java.math.*;
import java.util.*;

public class Solution {
    public static void main(String[] args) throws IOException {

        Scanner scanner = new Scanner(System.in);
        scanner.close();

        BigInteger n = scanner.nextBigInteger();

        System.out.print(n.isProbablePrime(10) ? "prime" : "not prime");

    }
}

------------------------------------------------------------------------------>