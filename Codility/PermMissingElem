⭐️ problem ⭐️

An array A consisting of N different integers is given. The array contains integers in the range [1..(N + 1)], which means that exactly one element is missing.

Your goal is to find that missing element.

Write a function:

class Solution { public int solution(int[] A); }

that, given an array A, returns the value of the missing element.

For example, given array A such that:

  A[0] = 2
  A[1] = 3
  A[2] = 1
  A[3] = 5
the function should return 4, as it is the missing element.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [0..100,000];
the elements of A are all distinct;
each element of array A is an integer within the range [1..(N + 1)].







🐣🐣 solutions 🐣🐣

int solution(int [] A) {
		
				int answer = 0; // value that after to return
		
		int [] a  = new int [A.length + 2]; // init array A, size is same to array A.
		
		for(int i = 0; i < a.length; i++) a[i] = i; //init all of A to number same to index
		
		for(int i = 0; i < A.length; i++)	a[A[i]] = 0; // edit that index's data to 0

		
		for(int i = 1; i < a.length; i++) 
			if(a[i] != 0) answer = a[i];
				
		return answer;
	}
