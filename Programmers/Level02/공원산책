package array;

public class 공원산책 {

    public static void main(String[] args) {

        int[] solution = solution(new String[]{"OSO","OOO","OXO","OOO"}, new String[]{"E 2","S 3","W 1"});
        for (int i : solution) {
            System.out.println(i + ", ");
        }

    }

    public static int[] solution(String[] park, String[] routes) {

        int Y = park.length;
        int X = park[0].length();
        boolean[][] map = new boolean[Y][X];

        int nowX = 0, nowY = 0;
        int X_WALL = map.length, Y_WALL = map[0].length;

        for(int i = 0; i < Y; i++) {
            char[] cols = park[i].toCharArray();

            for(int j=0; j<cols.length; j++) {
                if(cols[j] == 'O') map[i][j] = true;
                else if(cols[j] == 'S') {
                    map[i][j] = true;
                    nowX = i;
                    nowY = j;
                }
            }
        }

        for(String route : routes) {
            String[] r = route.split(" ");
            int step = Integer.parseInt(r[1]);
            int target = 0, temp = 0;

            switch(r[0]) {
            case "E":
                temp = nowY;
                while(target++ < step && nowY+1 < Y_WALL && map[nowX][nowY+1]) nowY++;
                if(target-1 != step) nowY = temp;
                break;
            case "W":
                temp = nowY;
                while(target++ < step && nowY-1 >= 0 && map[nowX][nowY-1]) nowY--;
                if(target-1 != step) nowY = temp;
                break;
            case "S":
                temp = nowX;
                while(target++ < step && nowX+1 < X_WALL && map[nowX+1][nowY]) nowX++;
                if(target-1 != step) nowX = temp;
                break;
            case "N":
                temp = nowX;
                while(target++ < step && nowX-1 >= 0 && map[nowX-1][nowY]) nowX--;
                if(target-1 != step) nowX = temp;
                break;
            }
        }

        return new int[] {nowX, nowY};
    }
}
